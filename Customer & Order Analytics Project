#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--Query #1 The number of unique orders placed in January--
SELECT COUNT (distinct orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Query #2 The number of orders in January that were an iPhone--
SELECT COUNT (distinct orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

--Query #3 All the customer account numbers for all the orders placed in February--
SELECT distinct customers.acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderid <> 'Order ID';

--Query #4 The cheapest product sold in January and its price--
--Approach #1 Using the ORDER BY Function--
SELECT distinct Product, price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

--Approach #2 Using a Sub-query--
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

--Approach #3 Using the MIN Function--
SELECT distinct Product, MIN(price)
FROM BIT_DB.JanSales
GROUP BY Product, price
ORDER BY price ASC
LIMIT 1;

--Query #5 The total revenue for each product sold in January--
SELECT Product, SUM(Quantity) * price AS Revenue 
FROM BIT_DB.JanSales
GROUP BY Product;

--Query #6 Products sold in February at 548 Lincoln St, Seattle WA 98101, How many of each sold and the revenue.
SELECT Product, SUM(Quantity), SUM(Quantity) * price AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--Query #7 Number of customers who ordered more than 2 products in February and the avg amount spent by them--
SELECT COUNT(distinct acctnum), AVG(Quantity * price)
FROM BIT_DB.FebSales AS Feb
LEFT JOIN BIT_DB.customers AS cust
ON cust.order_id = Feb.orderID
WHERE Feb.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';

--Query #8 All the products sold in Los Angeles in February, and include how many of each were sold--
SELECT distinct Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

--Query #9 locations in New York that received at least 3 orders in January, and how many orders they each received--
SELECT distinct location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%New York%'
AND length(orderID) = 6 
AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

--Query 10 How many of each type of headphone were sold in February?--
SELECT distinct Product, SUM (Quantity) as quantity
FROM BIT_DB.FebSales
WHERE Product like '%headphone%'
GROUP BY Product;

--Query 11 The average amount spent per account in February--
SELECT SUM(price * Quantity) / COUNT(cust.acctnum) AS AvgAmountPerAccount
FROM BIT_DB.FebSales AS Feb
LEFT JOIN BIT_DB.customers AS cust
ON cust.order_id = Feb.orderID
AND length(orderID) = 6
AND orderID <> 'Order ID';

--Query 12 The average quantity of products purchased per account in February--
SELECT SUM(Quantity)/COUNT(cust.acctnum) AS AvgQuantityPerAccount
FROM BIT_DB.FebSales AS Feb
LEFT JOIN BIT_DB.customers AS cust
ON Feb.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Query 13 Which product brought in the most revenue in January and how much revenue did it bring in total?--
SELECT Product, SUM (Quantity * price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM (Quantity * price) desc
LIMIT 1;


